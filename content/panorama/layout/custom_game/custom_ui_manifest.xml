<root>
	<scripts>
		<include src="file://{resources}/scripts/custom_game/util.js" />
	</scripts>

	<script>
		GameUI.CustomUIConfig().multiteam_top_scoreboard =
		{
			shouldSort: false
		};

//		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_TIMEOFDAY, false );
//		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_HEROES, false );
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD, false );

		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME, false );

		function FillTopBarPlayer(TeamContainer) {
			// Fill players top bar in case on partial lobbies
			var playerCount = TeamContainer.GetChildCount();
			for (var i = playerCount + 1; i <= 12; i++) {
				var newPlayer = $.CreatePanel('DOTATopBarPlayer', TeamContainer, 'RadiantPlayer-1');
				if (newPlayer) {
					newPlayer.FindChildTraverse('PlayerColor').style.backgroundColor = '#FFFFFFFF';
				}
				newPlayer.SetHasClass('EnemyTeam', true);
			}
		}

		// Set vanilla topbar for 10v10
		SetupTopBar();

		function SetupTopBar() {
			var topbar_width = "1800px";
			var topbar_team_width = "815px";
			var topbar_team_container_width = "737px";
			var topbar_team_players_container_width = "755px";
			var topbar_player_width;
			var update_player_size = false;

			if (Math.abs(Game.GetScreenWidth() / Game.GetScreenHeight() - 16/10) <= 0.1) {
				topbar_width = "1650px";
				topbar_team_width = "750px";
				topbar_team_container_width = "737px";
				topbar_team_players_container_width = "670px";
				topbar_player_width = "60px";
				update_player_size = true;
			} else if (Math.abs(Game.GetScreenWidth() / Game.GetScreenHeight() - 4/3) <= 0.1) {
				topbar_width = "1300px";
				topbar_team_width = "600px";
				topbar_team_container_width = "737px";
				topbar_team_players_container_width = "490px";
				topbar_player_width = "45px";
				update_player_size = true;
			}

//			$.GetContextPanel().SetHasClass('TenVTen', true);
			var topbar = FindDotaHudElement('topbar');
			topbar.style.width = topbar_width;

			// Top Bar Radiant
			var TopBarRadiantTeam = FindDotaHudElement('TopBarRadiantTeam');
			TopBarRadiantTeam.style.width = topbar_team_width;

			var topbarRadiantPlayers = FindDotaHudElement('TopBarRadiantPlayers');
			topbarRadiantPlayers.style.width = topbar_team_width;

			var topbarRadiantPlayersContainer = FindDotaHudElement('TopBarRadiantPlayersContainer');
			topbarRadiantPlayersContainer.style.width = topbar_team_players_container_width;
			FillTopBarPlayer(topbarRadiantPlayersContainer);

			var RadiantTeamContainer = FindDotaHudElement('RadiantTeamContainer');
			RadiantTeamContainer.style.height = topbar_team_container_width;

			// Top Bar Dire
			var TopBarDireTeam = FindDotaHudElement('TopBarDireTeam');
			TopBarDireTeam.style.width = topbar_team_width;

			var topbarDirePlayers = FindDotaHudElement('TopBarDirePlayers');
			topbarDirePlayers.style.width = topbar_team_width;

			var topbarDirePlayersContainer = FindDotaHudElement('TopBarDirePlayersContainer');
			topbarDirePlayersContainer.style.width = topbar_team_players_container_width;
			FillTopBarPlayer(topbarDirePlayersContainer);

			var DireTeamContainer = FindDotaHudElement('DireTeamContainer');
			DireTeamContainer.style.height = topbar_team_container_width;

			if (update_player_size == true) {
				$.Msg(topbarRadiantPlayersContainer.GetChildCount())
				for (var i = 0; i <= topbarRadiantPlayersContainer.GetChildCount(); i++) {
					if (topbarRadiantPlayersContainer.GetChild(i) != null)
						topbarRadiantPlayersContainer.GetChild(i).style.width = topbar_player_width;
				}
				$.Msg(topbarDirePlayersContainer.GetChildCount())
				for (var i = 0; i <= topbarDirePlayersContainer.GetChildCount(); i++) {
					if (topbarDirePlayersContainer.GetChild(i) != null)
						topbarDirePlayersContainer.GetChild(i).style.width = topbar_player_width;
				}
			}
		}

		HidePickScreen()

		function HidePickScreen() {
			if (!Game.GameStateIs(3)) {
//				$.Msg("Hide Pick Screen and Repeat!")
				FindDotaHudElement("PreGame").style.opacity = "0";
				$.Schedule(1.0, HidePickScreen)
			}
			else {
				FindDotaHudElement("PreGame").style.opacity = "1";				
			}
		}
	</script>

	<Panel>
<!--		<CustomUIElement type="HudTopBar"			layoutfile="file://{resources}/layout/custom_game/multiteam_top_scoreboard.xml" /> -->
		<CustomUIElement type="HeroSelection"		layoutfile="file://{resources}/layout/custom_game/multiteam_hero_select_overlay.xml" />
		<CustomUIElement type="FlyoutScoreboard"	layoutfile="file://{resources}/layout/custom_game/multiteam_flyout_scoreboard.xml" />
		<CustomUIElement type="HeroSelection" 		layoutfile="file://{resources}/layout/custom_game/multiteam_hero_select_overlay.xml" />
		<CustomUIElement type="EndScreen" 			layoutfile="file://{resources}/layout/custom_game/multiteam_end_screen.xml" />
		<CustomUIElement type="Hud"					layoutfile="file://{resources}/layout/custom_game/statcollection.xml" />
	</Panel>
</root>
